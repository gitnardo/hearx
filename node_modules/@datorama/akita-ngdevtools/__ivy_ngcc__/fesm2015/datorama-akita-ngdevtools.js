import { APP_INITIALIZER, NgModule, NgZone, InjectionToken, Inject, Injectable } from '@angular/core';
import { akitaDevtools } from '@datorama/akita';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
const DEVTOOLS_OPTIONS = new InjectionToken('DevtoolsOptions');
class AkitaDevtools {
    /**
     * @param {?} ngZone
     * @param {?} options
     */
    constructor(ngZone, options) {
        this.ngZone = ngZone;
        this.options = options;
        akitaDevtools(this.ngZone, this.options);
    }
}
AkitaDevtools.ɵfac = function AkitaDevtools_Factory(t) { return new (t || AkitaDevtools)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DEVTOOLS_OPTIONS)); };
AkitaDevtools.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AkitaDevtools, factory: AkitaDevtools.ɵfac });
/** @nocollapse */
AkitaDevtools.ctorParameters = () => [
    { type: NgZone },
    { type: undefined, decorators: [{ type: Inject, args: [DEVTOOLS_OPTIONS,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AkitaDevtools, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{
                type: Inject,
                args: [DEVTOOLS_OPTIONS]
            }] }]; }, null); })();
// auto initialize the devtools
/**
 * @return {?}
 */
function d() { }
/**
 * @param {?} akitaDevtools
 * @return {?}
 */
function init(akitaDevtools$$1) {
    return d;
}
class AkitaNgDevtools {
    /**
     * @param {?=} options
     * @return {?}
     */
    static forRoot(options) {
        return {
            ngModule: AkitaNgDevtools,
            providers: [
                AkitaDevtools,
                {
                    provide: DEVTOOLS_OPTIONS,
                    useValue: options
                },
                {
                    provide: APP_INITIALIZER,
                    useFactory: init,
                    deps: [AkitaDevtools],
                    multi: true
                }
            ]
        };
    }
}
AkitaNgDevtools.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AkitaNgDevtools });
AkitaNgDevtools.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AkitaNgDevtools_Factory(t) { return new (t || AkitaNgDevtools)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AkitaNgDevtools, [{
        type: NgModule,
        args: [{}]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { d, init, DEVTOOLS_OPTIONS, AkitaDevtools, AkitaNgDevtools };

//# sourceMappingURL=datorama-akita-ngdevtools.js.map