{"version":3,"sources":["ng://@datorama/akita-ngdevtools/index.ts"],"names":["DEVTOOLS_OPTIONS","InjectionToken","AkitaDevtools","Injectable","NgZone","Inject","args","ngZone","options","this","akitaDevtools","d","init","AkitaNgDevtools","forRoot","ngModule","providers","provide","useValue","APP_INITIALIZER","useFactory","deps","multi","NgModule"],"mappings":"oXAWA,IAAaA,EAAmB,IAAIC,EAAAA,eAClC,mBAGFC,uBAACC,EAAAA,sDAXCC,EAAAA,0CAeGC,EAAAA,OAAMC,KAAA,CAACN,QAIZE,GANE,SAAAA,EACUK,EAC0BC,GAD1BC,KAAAF,OAAAA,EAC0BE,KAAAD,QAAAA,EAElCE,EAAAA,cAAcD,KAAKF,OAAQE,KAAKD,SAKpC,SAAgBG,KAChB,SAAgBC,EAAKF,GACnB,OAAOC,EAGT,IAAAE,GAEgBA,EAAAC,QAAd,SACEN,GAEA,MAAO,CACLO,SAAUF,EACVG,UAAW,CACTd,EACA,CACEe,QAASjB,EACTkB,SAAUV,GAEZ,CACES,QAASE,EAAAA,gBACTC,WAAYR,EACZS,KAAM,CAACnB,GACPoB,OAAO,0BAjBhBC,EAAAA,SAAQjB,KAAA,CAAC,MAsBVO,GAtBA,SAAAA","sourcesContent":["import {\n  APP_INITIALIZER,\n  ModuleWithProviders,\n  NgModule,\n  NgZone,\n  InjectionToken,\n  Inject,\n  Injectable\n} from '@angular/core';\nimport { akitaDevtools, DevtoolsOptions } from '@datorama/akita';\n\nexport const DEVTOOLS_OPTIONS = new InjectionToken<DevtoolsOptions>(\n  'DevtoolsOptions'\n);\n\n@Injectable()\nexport class AkitaDevtools {\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DEVTOOLS_OPTIONS) private options: DevtoolsOptions\n  ) {\n    akitaDevtools(this.ngZone, this.options);\n  }\n}\n\n// auto initialize the devtools\nexport function d() {}\nexport function init(akitaDevtools: AkitaDevtools) {\n  return d;\n}\n\n@NgModule({})\nexport class AkitaNgDevtools {\n  public static forRoot(\n    options?: Partial<DevtoolsOptions>\n  ): ModuleWithProviders {\n    return {\n      ngModule: AkitaNgDevtools,\n      providers: [\n        AkitaDevtools,\n        {\n          provide: DEVTOOLS_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: init,\n          deps: [AkitaDevtools],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"]}