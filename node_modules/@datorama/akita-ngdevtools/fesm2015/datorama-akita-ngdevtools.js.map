{"version":3,"file":"datorama-akita-ngdevtools.js.map","sources":["ng://@datorama/akita-ngdevtools/index.ts"],"sourcesContent":["import {\n  APP_INITIALIZER,\n  ModuleWithProviders,\n  NgModule,\n  NgZone,\n  InjectionToken,\n  Inject,\n  Injectable\n} from '@angular/core';\nimport { akitaDevtools, DevtoolsOptions } from '@datorama/akita';\n\nexport const DEVTOOLS_OPTIONS = new InjectionToken<DevtoolsOptions>(\n  'DevtoolsOptions'\n);\n\n@Injectable()\nexport class AkitaDevtools {\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DEVTOOLS_OPTIONS) private options: DevtoolsOptions\n  ) {\n    akitaDevtools(this.ngZone, this.options);\n  }\n}\n\n// auto initialize the devtools\nexport function d() {}\nexport function init(akitaDevtools: AkitaDevtools) {\n  return d;\n}\n\n@NgModule({})\nexport class AkitaNgDevtools {\n  public static forRoot(\n    options?: Partial<DevtoolsOptions>\n  ): ModuleWithProviders {\n    return {\n      ngModule: AkitaNgDevtools,\n      providers: [\n        AkitaDevtools,\n        {\n          provide: DEVTOOLS_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: init,\n          deps: [AkitaDevtools],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"],"names":["akitaDevtools"],"mappings":";;;;;;;AAAA;AAWA,MAAa,gBAAgB,GAAG,IAAI,cAAc,CAChD,iBAAiB,CAClB;AAGD,MAAa,aAAa;;;;;IACxB,YACU,MAAc,EACY,OAAwB;QADlD,WAAM,GAAN,MAAM,CAAQ;QACY,YAAO,GAAP,OAAO,CAAiB;QAE1D,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC1C;;;YAPF,UAAU;;;;YAXT,MAAM;4CAeH,MAAM,SAAC,gBAAgB;;;;;;AAO5B,SAAgB,CAAC,MAAK;;;;;AACtB,SAAgB,IAAI,CAACA,gBAA4B;IAC/C,OAAO,CAAC,CAAC;CACV;AAGD,MAAa,eAAe;;;;;IACnB,OAAO,OAAO,CACnB,OAAkC;QAElC,OAAO;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE;gBACT,aAAa;gBACb;oBACE,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,OAAO;iBAClB;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,IAAI;oBAChB,IAAI,EAAE,CAAC,aAAa,CAAC;oBACrB,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;KACH;;;YArBF,QAAQ,SAAC,EAAE;;;;;;;;;;"}
