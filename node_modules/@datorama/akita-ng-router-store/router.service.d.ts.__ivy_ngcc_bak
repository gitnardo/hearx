import { NavigationCancel, NavigationError, Router } from '@angular/router';
import { RouterStore } from './router.store';
import { RouterQuery } from './router.query';
export declare class RouterService {
    private routerStore;
    private routerQuery;
    private router;
    private routerStateSnapshot;
    private lastRoutesRecognized;
    private dispatchTriggeredByRouter;
    private navigationTriggeredByDispatch;
    private routerState;
    constructor(routerStore: RouterStore, routerQuery: RouterQuery, router: Router);
    dispatchRouterCancel(event: NavigationCancel): void;
    dispatchRouterError(event: NavigationError): void;
    dispatchRouterNavigation(): void;
    init(): void;
    private update;
    /**
     * Hook into the angular router before each navigation action is performed
     * since the route tree can be large, we serialize it into something more manageable
     */
    private setUpRouterHook;
    private setUpStoreListener;
    private shouldDispatchRouterNavigation;
    private navigateIfNeeded;
    private setUpStateRollbackEvents;
    private serializeRoute;
}
